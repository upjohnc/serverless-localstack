service: step-function-thing

provider:
  name: aws
  runtime: python3.8
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:*"
        - "lambda:*"
        - "states:StartExecution"
      Resource:
        - "*"
stepFunctions:
  stateMachines:
    bigtest:
      name: BigTest
      # Description: "Make the world go around"
      definition:
        StartAt: StartTranscribe
        States:
          StartTranscribe:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: "arn:aws:lambda:us-east-1:827890319258:function:start-transcribe-lambda:$LATEST"
              Payload:
                Input.$: "$"
            Next:
              WaitForTranscribe
          WaitForTranscribe:
            Type: Wait
            Seconds: 45
            Next: CheckTranscribeStatus
          CheckTranscribeStatus:
            Type: Task
            Resource: "arn:aws:states:::lambda:invoke"
            Parameters:
              FunctionName: "arn:aws:lambda:us-east-1:827890319258:function:transcribe-status-lambda:$LATEST"
              Payload:
                Input.$: "$"
            Next: IsTrascribeComplete
          IsTrascribeComplete:
            Type: Choice
            Choices:
              - Variable: "$.Payload.TranscriptionJobStatus"
                StringEquals: COMPLETED
                Next: TranscriptAvailable
              - Variable: "$.Payload.TranscriptionJobStatus"
                StringEquals: FAILED
                Next: TranscribeFailed
            Default: WaitForTranscribe
          TranscriptAvailable:
            Type: Pass
            End: True
          TranscribeFailed:
            Type: Fail

plugins:
  - serverless-step-functions

